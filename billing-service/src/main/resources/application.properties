spring.application.name=billing-service
server.port=8083
# Config service. Par défaut c'est true
spring.cloud.config.enabled=true
# Il va chercher le reste de la configuration dans le serveur de config
spring.config.import=optional:configserver:http://localhost:9999
# Circuit breaker (disjoncteur)
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always
# Enregistrer le circuit breaker "customerServiceCB" dans actuator (http://localhost:8888/billing-service/actuator/health)
resilience4j.circuitbreaker.instances.customerServiceCB.register-health-indicator=true
# Après 10 requêtes (par exemple : appel 10 fois sur http://localhost:8888/billing-service/bills/1),
# l'état (state) du circuit breaker passe à OPEN, si dans ces 10, les 6 appels ont échoué
resilience4j.circuitbreaker.instances.customerServiceCB.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.customerServiceCB.sliding-window-size=6







######### TOUS CES PARAMETRES ONT ETE DEPLACES VERS LE SERVICE DE CONFIGURATION #######
# ? S'ils n'ont pas été déplacés, la ligne avec ---- devait être activée (non-commenté)

#---- spring.datasource.url=jdbc:h2:mem:ecommerce-bill
#---- spring.h2.console.enabled=true

# Activer tous les endpoints de Actuator (par défaut c'est seulement health est exposé)
#management.endpoints.web.exposure.include=health refresh
#---- management.endpoints.web.exposure.include=*

# Ne pas s'enregistrer automatiquement auprès du serveur discovery
# Et ne pas chercher automatiquement sa config auprès du service de configuration
#spring.cloud.discovery.enabled=false
#spring.cloud.config.enabled=false

# Discovery service
#---- spring.cloud.discovery.enabled=true
#---- eureka.client.service-url.defaultZone=http://localhost:8761/eureka
#---- eureka.instance.prefer-ip-address=true

# Config service
#---- spring.cloud.config.enabled=true